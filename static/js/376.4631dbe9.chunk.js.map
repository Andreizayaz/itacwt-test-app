{"version":3,"file":"static/js/376.4631dbe9.chunk.js","mappings":"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","sources":["global/helpers/functions.ts","http/helpers/const.ts","http/index.ts","api/index.ts","global/hooks/useServerData.ts","global/hooks/useTableHeadings.ts","global/hooks/useEditForm.ts","global/hooks/useModal.ts","components/entities/page/helpers/consts.ts","global/hooks/useControls.ts","components/shared/controls/Controls.tsx","components/shared/controls/helpers/consts.ts","components/entities/page/Page.tsx","components/entities/price/helpers/consts.ts","components/entities/price/Price.tsx","components/entities/product/helpers/consts.ts","components/entities/product/Product.tsx","components/pages/products/helpers/consts.ts","components/pages/products/Products.tsx"],"sourcesContent":["import {\r\n  ACTIVE,\r\n  DATE_LOCALES,\r\n  INACTIVE,\r\n  STATUS,\r\n  STATUS_HEADING,\r\n  actions,\r\n  modifyedHeadings,\r\n} from \"./consts\";\r\n\r\nconst addZero = (char: string) => (parseInt(char) < 10 ? `0${char}` : char);\r\n\r\nconst modifyDate = (dateString: string) => {\r\n  if (!dateString.length) {\r\n    return \"\";\r\n  }\r\n  const fullDate = new Date(dateString);\r\n  const date = fullDate\r\n    .toLocaleDateString(DATE_LOCALES)\r\n    .split(\"/\")\r\n    .map(addZero)\r\n    .join(\"/\");\r\n  const time = fullDate.toLocaleTimeString();\r\n\r\n  return `${date}, ${time}`;\r\n};\r\n\r\nconst modifyStatus = (status: boolean) => (status ? ACTIVE : INACTIVE);\r\n\r\nconst getObjFromNestedFields = (key: string, value: Object) => {\r\n  const obj: {\r\n    [key: string]: any;\r\n  } = {};\r\n  const getNestedFields = ([key, value]: [string, any]): any => {\r\n    if (value?.constructor !== Object) {\r\n      obj[key as string] = value;\r\n      return { [key]: value };\r\n    }\r\n\r\n    return Object.entries(value).map(getNestedFields);\r\n  };\r\n  getNestedFields([key, value]);\r\n  return obj;\r\n};\r\n\r\nexport const makeUserFriendlyData = (obj: any) => {\r\n  const tempObj = structuredClone(obj);\r\n  for (const key in tempObj) {\r\n    if (Object.prototype.hasOwnProperty.call(tempObj, key)) {\r\n      if (key === STATUS) {\r\n        tempObj[key] = modifyStatus(tempObj[key]);\r\n      }\r\n      if (actions.includes(key)) {\r\n        tempObj[key] = modifyDate(tempObj[key]);\r\n      }\r\n      if (tempObj[key]?.constructor === Object) {\r\n        const objFromNestedFields = getObjFromNestedFields(key, tempObj[key]);\r\n        Object.assign(tempObj, objFromNestedFields);\r\n        delete tempObj[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  return tempObj;\r\n};\r\n\r\nexport const getHeadingsForTable = (key: string) => {\r\n  if (key === STATUS) {\r\n    return STATUS_HEADING;\r\n  }\r\n\r\n  if (actions.includes(key)) {\r\n    const heading = actions.find((act) => act === key);\r\n    return modifyedHeadings.find((tabHeading) => heading?.includes(tabHeading));\r\n  }\r\n\r\n  return key;\r\n};\r\n\r\nexport const fillEmptySells = (data: any[]) => {\r\n   const keys = data\r\n     .map((item: any) => Object.keys(item))\r\n     .find((keysList: string[]) => Math.max(keysList.length));\r\n  const modData = data.map((dataItem) => {\r\n    const emptyKey = keys?.filter(\r\n      (keys) => !Object.keys(dataItem).includes(keys)\r\n    );\r\n    emptyKey?.forEach((emptyItem) => (dataItem[emptyItem] = \"\"));\r\n    return dataItem;\r\n  });\r\n  return modData;\r\n};\r\n","export const BASE_URL = \"http://localhost:5000/\";\r\n","import axios from \"axios\";\r\nimport { BASE_URL } from \"./helpers/const\";\r\n\r\nconst $api = axios.create({\r\n  baseURL: BASE_URL,\r\n});\r\n\r\nexport default $api;\r\n","import { fillEmptySells } from \"src/global/helpers/functions\";\r\nimport axios from \"../http\";\r\n\r\nexport const getServerData = async (url: string) => {\r\n  const serverData = (await axios.get(url)).data;\r\n  const modData = fillEmptySells(serverData)\r\n  return modData;\r\n};\r\n\r\nexport const editServerData = async (url: string, payload: any) => {\r\n  const modifiedData = await axios.patch(url, payload);\r\n  return modifiedData;\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getServerData } from \"src/api\";\r\nimport { makeUserFriendlyData } from \"../helpers/functions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectSearchFilterData, setServerData } from \"src/store\";\r\n\r\nexport const useServerData = (url: string) => {\r\n  const [displayData, setDisplayData] = useState<any[]>([]);\r\n\r\n  const dispatch = useDispatch();\r\n  const serverData = useSelector(selectSearchFilterData);\r\n\r\n  useEffect(() => {\r\n    Promise.resolve(getServerData(url)).then((data) => {\r\n      dispatch(setServerData(data));\r\n      return;\r\n    });\r\n  }, [dispatch, url]);\r\n\r\n  useEffect(() => {\r\n    const userFriendlyData = serverData.map(makeUserFriendlyData);\r\n    setDisplayData(userFriendlyData);\r\n  }, [serverData]);\r\n\r\n  return { displayData };\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getHeadingsForTable } from \"../helpers/functions\";\r\nimport { ID } from \"../helpers/consts\";\r\n\r\nexport const useTableHeadings = (data: any[]) => {\r\n  const [tableHeadings, setTableHeadings] = useState<any[]>([]);\r\n  useEffect(() => {\r\n    if (data.length) {\r\n      const maxKeysArray = data\r\n        .map((item) => Object.keys(item))\r\n        .find((item) => Math.max(Object.keys(item).length));\r\n      if (maxKeysArray?.length) {\r\n        const headings = maxKeysArray\r\n          .filter((key) => key !== ID)\r\n          .map(getHeadingsForTable);\r\n        setTableHeadings(headings);\r\n      }\r\n    }\r\n  }, [data]);\r\n\r\n  return { tableHeadings };\r\n};\r\n","import { useState, MouseEvent, FormEvent } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectSearchFilterData, setServerData } from \"src/store\";\r\nimport { useModal } from \"./useModal\";\r\nimport { editServerData, getServerData } from \"src/api\";\r\n\r\nexport const useEditForm = (url: string) => {\r\n  const dispatch = useDispatch();\r\n  const [payload, setPayload] = useState({});\r\n  const [dataForEdit, setDataForEdit] = useState();\r\n  const [id, setId] = useState<any>();\r\n  const serverData = useSelector(selectSearchFilterData);\r\n\r\n  const { isOpen, openModal, closeModal } = useModal();\r\n\r\n  const openEditForm = (e: MouseEvent<HTMLTableSectionElement, MouseEvent>) => {\r\n    const isEdit =\r\n      (e.target as HTMLElement).classList.contains(\"edit-btn\") &&\r\n      (e.target as HTMLElement).closest(\"tr\");\r\n    if (isEdit) {\r\n      const id = (e.target as HTMLElement).closest(\"tr\")?.id;\r\n      const temp = serverData.find((data) => data.id?.toString() === id);\r\n      setDataForEdit(temp as any);\r\n      openModal();\r\n      id && setId(id);\r\n    }\r\n  };\r\n\r\n  const submitData = async (\r\n    e: FormEvent<HTMLFormElement>,\r\n    updateDateKey?: string\r\n  ) => {\r\n    e.preventDefault();\r\n    if (updateDateKey) {\r\n      await editServerData(`${url}/${id}`, {\r\n        ...payload,\r\n        [updateDateKey]: new Date(),\r\n      });\r\n    } else {\r\n      await editServerData(`${url}/${id}`, payload);\r\n    }\r\n    closeModal();\r\n    const updatedData = await getServerData(url);\r\n    dispatch(setServerData(updatedData));\r\n  };\r\n\r\n  const handleInput = (e: any) =>\r\n    setPayload({ [e.target.name]: e.target.value });\r\n\r\n  return {\r\n    openEditForm,\r\n    dataForEdit,\r\n    isOpen,\r\n    closeModal,\r\n    submitData,\r\n    handleInput,\r\n  };\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useModal = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const closeModal = () => setIsOpen(false);\r\n\r\n  const openModal = () => setIsOpen(true);\r\n\r\n  return {isOpen, openModal, closeModal}\r\n};\r\n","export const FORM_LABEL = \"title\";\r\nexport const ALL = \"all\";","import { ChangeEvent, FormEvent, useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setSearchResult } from \"src/store\";\r\nimport { selectServerData } from \"src/store/selectors\";\r\nimport { ACTIVE, INACTIVE } from \"../helpers/consts\";\r\nimport { ALL } from \"src/components/entities/page/helpers/consts\";\r\n\r\nexport const useControls = (searchKeys: string[], keyForSort: string) => {\r\n  const serverData = useSelector(selectServerData);\r\n  const [searchFilterParams, setSearchFilterParams] = useState({\r\n    search: \"\",\r\n    filter: ALL,\r\n    sort: \"\",\r\n  });\r\n  const dispatch = useDispatch();\r\n\r\n  const searchByKeys = (obj: any, searchKeys: string[], value: string) => {\r\n    for (let i = 0; i < searchKeys.length; i++) {\r\n      if (obj.hasOwnProperty(searchKeys[i])) {\r\n        return obj[searchKeys[i] as keyof typeof obj]\r\n          ?.toLowerCase()\r\n          .includes(value.toLowerCase());\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSearchInput = (\r\n    e: FormEvent<HTMLInputElement>\r\n  ) => {\r\n    setSearchFilterParams({\r\n      ...searchFilterParams,\r\n      search: (e.target as HTMLInputElement).value,\r\n    });\r\n  };\r\n\r\n  const handleSelectStatus = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    setSearchFilterParams({ ...searchFilterParams, filter: e.target.value });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const temp = serverData\r\n      .filter((item) =>\r\n        searchByKeys(item, searchKeys, searchFilterParams.search)\r\n      )\r\n      .filter((item) => {\r\n        switch (searchFilterParams.filter) {\r\n          case ACTIVE:\r\n            return item?.active;\r\n          case INACTIVE:\r\n            return !item?.active;\r\n          default:\r\n            return true;\r\n        }\r\n      })\r\n      .sort((a:any, b:any) => {\r\n        if (searchFilterParams.sort === \"by asc\") {\r\n          return a[keyForSort]?.localeCompare(b[keyForSort]);\r\n        } \r\n          return b[keyForSort]?.localeCompare(a[keyForSort]);\r\n      });\r\n    dispatch(setSearchResult(temp));\r\n  }, [searchFilterParams]);\r\n\r\n  const handleSort = (e: ChangeEvent<HTMLSelectElement>) => {\r\n    setSearchFilterParams({ ...searchFilterParams, sort: e.target.value });\r\n  };\r\n\r\n  return { handleSearchInput, handleSelectStatus, handleSort };\r\n};\r\n","import { FC, ReactElement, FormEvent, ChangeEvent } from \"react\";\r\nimport { INPUT_PLACEHOLDER } from \"./helpers/consts\";\r\n\r\nimport \"./Controls.scss\";\r\nimport { ALL } from \"src/components/entities/page/helpers/consts\";\r\n\r\ntype ControlsPropsTypes = {\r\n  options: string[];\r\n  filterOptions: string[];\r\n  handleInput: (e: FormEvent<HTMLInputElement>) => void;\r\n  handleChange: (e: ChangeEvent<HTMLSelectElement>) => void;\r\n  handleFilter: (e: ChangeEvent<HTMLSelectElement>) => void;\r\n};\r\n\r\nexport const Controls: FC<ControlsPropsTypes> = ({\r\n  options,\r\n  filterOptions,\r\n  handleInput,\r\n  handleChange,\r\n  handleFilter,\r\n}): ReactElement => (\r\n  <div className=\"controls\">\r\n    <input\r\n      type=\"text\"\r\n      placeholder={INPUT_PLACEHOLDER}\r\n      onInput={(e: FormEvent<HTMLInputElement>) => handleInput(e)}\r\n    />\r\n    <select\r\n      name=\"status\"\r\n      onChange={(e) => {\r\n        handleChange(e);\r\n      }}\r\n    >\r\n      {options.map((item) => (\r\n        <option key={item} value={item} selected={item === ALL}>\r\n          {item}\r\n        </option>\r\n      ))}\r\n    </select>\r\n    <select\r\n      name=\"filterOptions\"\r\n      onChange={(e) => {\r\n        handleFilter(e);\r\n      }}\r\n    >\r\n      {filterOptions.map((item) => (\r\n        <option\r\n          key={item}\r\n          value={item}\r\n          disabled={item === \"reset\"}\r\n          selected={item === \"reset\"}\r\n        >\r\n          {item}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  </div>\r\n);\r\n","export const INPUT_PLACEHOLDER = \"search\";\r\n","import { FC, FormEvent, ReactElement } from \"react\";\r\nimport { Modal, Table } from \"src/components/shared\";\r\nimport {\r\n  useControls,\r\n  useEditForm,\r\n  useServerData,\r\n  useTableHeadings,\r\n} from \"src/global/hooks\";\r\nimport { PAGES_URL } from \"src/router/consts\";\r\nimport { ALL, FORM_LABEL } from \"./helpers/consts\";\r\nimport {\r\n  ACTIVE,\r\n  INACTIVE,\r\n  MODAL_HEADING,\r\n  SAVE_BTN,\r\n  UPDATED_AT,\r\n} from \"src/global/helpers/consts\";\r\nimport { Controls } from \"src/components/shared/controls\";\r\n\r\nexport const Page: FC = (): ReactElement => {\r\n  const { displayData } = useServerData(PAGES_URL);\r\n  const { tableHeadings } = useTableHeadings(displayData);\r\n\r\n  const {\r\n    dataForEdit,\r\n    openEditForm,\r\n    isOpen,\r\n    closeModal,\r\n    submitData,\r\n    handleInput,\r\n  } = useEditForm(PAGES_URL);\r\n\r\n  const { handleSearchInput, handleSelectStatus, handleSort } = useControls(\r\n    [\"title\"],\r\n    \"title\"\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Controls\r\n        options={[ALL, ACTIVE, INACTIVE]}\r\n        handleInput={(e: FormEvent<HTMLInputElement>) =>\r\n          handleSearchInput(e)\r\n        }\r\n        handleChange={handleSelectStatus}\r\n        handleFilter={handleSort}\r\n        filterOptions={[\"reset\", \"by desc\", \"by asc\"]}\r\n      />\r\n      <Table\r\n        tableData={displayData}\r\n        tableHeadings={tableHeadings}\r\n        openEdit={openEditForm}\r\n      />\r\n      {isOpen && (\r\n        <Modal heading={MODAL_HEADING} closeModal={closeModal}>\r\n          <form onSubmit={(e) => submitData(e, UPDATED_AT)}>\r\n            <div className=\"form-group\">\r\n              <label>{FORM_LABEL}</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder={FORM_LABEL}\r\n                defaultValue={dataForEdit && dataForEdit[FORM_LABEL]}\r\n                name={FORM_LABEL}\r\n                onInput={(e) => handleInput(e)}\r\n              />\r\n            </div>\r\n            <input type=\"submit\" value={SAVE_BTN} />\r\n          </form>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","export const FORM_LABEL = \"description\";\r\n","import { FC, FormEvent, ReactElement } from \"react\";\r\nimport { Modal, Table } from \"src/components/shared\";\r\nimport { useControls, useEditForm, useServerData, useTableHeadings } from \"src/global/hooks\";\r\nimport { PRICES_URL } from \"src/router/consts\";\r\nimport { FORM_LABEL } from \"./helpers/consts\";\r\nimport { ACTIVE, INACTIVE, MODAL_HEADING, SAVE_BTN } from \"src/global/helpers/consts\";\r\nimport { Controls } from \"src/components/shared/controls\";\r\nimport { ALL } from \"../page/helpers/consts\";\r\n\r\nexport const Price: FC = (): ReactElement => {\r\n  const { displayData } = useServerData(PRICES_URL);\r\n  const { tableHeadings } = useTableHeadings(displayData);\r\n\r\n  const {\r\n    dataForEdit,\r\n    openEditForm,\r\n    isOpen,\r\n    closeModal,\r\n    submitData,\r\n    handleInput,\r\n  } = useEditForm(PRICES_URL);\r\n\r\n  const { handleSearchInput, handleSelectStatus, handleSort } = useControls(\r\n    [\"description\"],\r\n    \"description\"\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Controls\r\n        options={[ALL, ACTIVE, INACTIVE]}\r\n        handleInput={(e: FormEvent<HTMLInputElement>) =>\r\n          handleSearchInput(e)\r\n        }\r\n        handleChange={handleSelectStatus}\r\n        handleFilter={handleSort}\r\n        filterOptions={[\"reset\", \"by desc\", \"by asc\"]}\r\n      />\r\n      <Table\r\n        tableData={displayData}\r\n        tableHeadings={tableHeadings}\r\n        openEdit={openEditForm}\r\n      />\r\n      {isOpen && (\r\n        <Modal heading={MODAL_HEADING} closeModal={closeModal}>\r\n          <form onSubmit={(e) => submitData(e)}>\r\n            <div className=\"form-group\">\r\n              <label>{FORM_LABEL}</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder={FORM_LABEL}\r\n                defaultValue={dataForEdit && dataForEdit[FORM_LABEL]}\r\n                name={FORM_LABEL}\r\n                onInput={(e) => handleInput(e)}\r\n              />\r\n            </div>\r\n            <input type=\"submit\" value={SAVE_BTN} />\r\n          </form>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","export const FORM_LABEL = \"name\";\r\nexport const ALL = \"all\";","import { FC, FormEvent, ReactElement } from \"react\";\r\nimport { Modal, Table } from \"src/components/shared\";\r\nimport {\r\n  useControls,\r\n  useEditForm,\r\n  useServerData,\r\n  useTableHeadings,\r\n} from \"src/global/hooks\";\r\nimport { PRODUCTS_URL } from \"src/router/consts\";\r\nimport { ALL, FORM_LABEL } from \"./helpers/consts\";\r\nimport {\r\n  ACTIVE,\r\n  INACTIVE,\r\n  MODAL_HEADING,\r\n  SAVE_BTN,\r\n  UPDATED_AT,\r\n} from \"src/global/helpers/consts\";\r\nimport { Controls } from \"src/components/shared/controls\";\r\n\r\nexport const Product: FC = (): ReactElement => {\r\n  const { displayData } = useServerData(PRODUCTS_URL);\r\n  const { tableHeadings } = useTableHeadings(displayData);\r\n\r\n  const {\r\n    dataForEdit,\r\n    openEditForm,\r\n    isOpen,\r\n    closeModal,\r\n    submitData,\r\n    handleInput,\r\n  } = useEditForm(PRODUCTS_URL);\r\n\r\n  const { handleSearchInput, handleSelectStatus, handleSort } = useControls(\r\n    [\"name\"],\r\n    \"name\"\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Controls\r\n        options={[ALL, ACTIVE, INACTIVE]}\r\n        handleInput={(e: FormEvent<HTMLInputElement>) => handleSearchInput(e)}\r\n        handleChange={handleSelectStatus}\r\n        handleFilter={handleSort}\r\n        filterOptions={[\"reset\", \"by desc\", \"by asc\"]}\r\n      />\r\n      <Table\r\n        tableData={displayData}\r\n        tableHeadings={tableHeadings}\r\n        openEdit={openEditForm}\r\n      />\r\n      {isOpen && (\r\n        <Modal heading={MODAL_HEADING} closeModal={closeModal}>\r\n          <form onSubmit={(e) => submitData(e, UPDATED_AT)}>\r\n            <div className=\"form-group\">\r\n              <label>{FORM_LABEL}</label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder={FORM_LABEL}\r\n                defaultValue={dataForEdit && dataForEdit[FORM_LABEL]}\r\n                name={FORM_LABEL}\r\n                onInput={(e) => handleInput(e)}\r\n              />\r\n            </div>\r\n            <input type=\"submit\" value={SAVE_BTN} />\r\n          </form>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","export const PAGES_HEADING = \"Products page\";\r\n","import { FC, ReactElement } from \"react\";\r\nimport { Product } from \"src/components/entities\";\r\nimport { PAGES_HEADING } from \"./helpers/consts\";\r\nimport { CustomHelmet, PageHeading } from \"src/components/shared\";\r\n\r\nconst Products: FC = (): ReactElement => (\r\n  <>\r\n    <CustomHelmet title={PAGES_HEADING} />\r\n    <PageHeading heading={PAGES_HEADING} />\r\n    <Product />\r\n  </>\r\n);\r\nexport default Products;\r\n"],"names":["addZero","char","parseInt","concat","modifyDate","dateString","length","fullDate","Date","date","toLocaleDateString","DATE_LOCALES","split","map","join","time","toLocaleTimeString","getObjFromNestedFields","key","value","obj","getNestedFields","_ref","constructor","Object","entries","makeUserFriendlyData","tempObj","structuredClone","_tempObj$key","prototype","hasOwnProperty","call","STATUS","ACTIVE","INACTIVE","actions","includes","objFromNestedFields","assign","getHeadingsForTable","STATUS_HEADING","heading","find","act","modifyedHeadings","tabHeading","axios","create","baseURL","getServerData","async","data","keys","item","keysList","Math","max","dataItem","emptyKey","filter","forEach","emptyItem","fillEmptySells","get","url","editServerData","payload","patch","useServerData","displayData","setDisplayData","useState","dispatch","useDispatch","serverData","useSelector","selectSearchFilterData","useEffect","Promise","resolve","then","setServerData","userFriendlyData","useTableHeadings","tableHeadings","setTableHeadings","maxKeysArray","headings","ID","useEditForm","setPayload","dataForEdit","setDataForEdit","id","setId","isOpen","openModal","closeModal","useModal","setIsOpen","openEditForm","e","target","classList","contains","closest","_closest","temp","_data$id","toString","submitData","updateDateKey","preventDefault","updatedData","handleInput","name","FORM_LABEL","ALL","useControls","searchKeys","keyForSort","selectServerData","searchFilterParams","setSearchFilterParams","search","sort","searchByKeys","i","_obj","toLowerCase","active","a","b","_b$keyForSort","_a$keyForSort","localeCompare","setSearchResult","handleSearchInput","handleSelectStatus","handleSort","Controls","options","filterOptions","handleChange","handleFilter","_jsxs","className","children","_jsx","type","placeholder","onInput","onChange","selected","disabled","Page","PAGES_URL","_Fragment","Table","tableData","openEdit","Modal","MODAL_HEADING","onSubmit","UPDATED_AT","defaultValue","SAVE_BTN","Price","PRICES_URL","Product","PRODUCTS_URL","PAGES_HEADING","Products","CustomHelmet","title","PageHeading"],"sourceRoot":""}